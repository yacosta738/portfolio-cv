---
import Link from "@atoms/Link.astro";
import Section from "@atoms/Section.astro";
import Typography from "@atoms/Typography.astro";
import { type Lang, useTranslations } from "@/i18n";
import type Work from "@/resume/work/work.model";

// Props interface
interface Props {
	work: Work[];
}

const { work } = Astro.props as Props;
const currentLocale = Astro.params.lang as Lang;
const t = useTranslations(currentLocale);
---

<Section title={t('experience')}>
  <ul class="flex flex-col gap-8">
    {
      work.map(
        (workItem) => {
          const { name, startDate, endDate, position, summary, highlights, url } = workItem;
          
          const startYear = startDate.getFullYear()
          const endYear = endDate ? endDate.getFullYear() : "Actual"
          
      
          const startDateStr = startDate.toISOString().split('T')[0]
          const endDateStr = endDate ? endDate.toISOString().split('T')[0] : null

          return (
            <li>
              <article class="py-2">
                <header class="flex justify-between items-start mb-1">
                  <div class="flex-1">
                    <Typography as="h3" variant="subtitle" withMargin={false} class="font-medium text-gray-900 mb-0">
                      {url ? (
                        <Link href={url} variant="primary" external>
                          {name}
                        </Link>
                      ) : (
                        name
                      )}
                    </Typography>
                    <Typography as="h4" variant="body" withMargin={false} class="text-gray-700 font-normal">
                      {position}
                    </Typography>
                  </div>

                  <div class="flex gap-1 text-gray-600 text-sm min-w-[102px] text-right max-sm:text-right">
                    <time 
                      class="relative text-sm text-gray-600 cursor-default hover:after:opacity-100 hover:after:visible after:content-[attr(data-title)] after:absolute after:bg-gray-800 after:text-white after:text-xs after:font-mono after:px-2 after:py-1 after:bottom-[-1.4rem] after:left-1/2 after:-translate-x-1/2 after:whitespace-nowrap after:shadow-md after:opacity-0 after:invisible after:border after:border-gray-700 after:rounded-md after:z-[99999] after:transition-all after:duration-100 after:delay-500"
                      datetime={startDateStr}
                      data-title={startDateStr}>
                        {startYear}
                    </time>
                    <span>-</span>
                    <time 
                      class="relative text-sm text-gray-600 cursor-default hover:after:opacity-100 hover:after:visible after:content-[attr(data-title)] after:absolute after:bg-gray-800 after:text-white after:text-xs after:font-mono after:px-2 after:py-1 after:bottom-[-1.4rem] after:left-1/2 after:-translate-x-1/2 after:whitespace-nowrap after:shadow-md after:opacity-0 after:invisible after:border after:border-gray-700 after:rounded-md after:z-[99999] after:transition-all after:duration-100 after:delay-500"
                      datetime={endDateStr}
                      data-title={endDateStr}>
                        {endYear}
                    </time>
                  </div>
                </header>

                <footer>
                  <Typography variant="body" withMargin={false} class="text-pretty">
                    {summary}
                  </Typography>
                </footer>
              </article>
            </li>
          )
        }
      )
    }
  </ul>
</Section>