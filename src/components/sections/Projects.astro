---
import Section from "@atoms/Section.astro";
import { Icon } from "astro-icon/components";
import { type Lang, useTranslations } from "@/i18n";
import type Project from "@/resume/project/project.model";

// Props interface
interface Props {
	projects?: Project[];
}

const { projects = [] } = Astro.props as Props;
const currentLocale = Astro.params.lang as Lang;
const t = useTranslations(currentLocale);
---

{projects.length > 0 && (
  <Section title={t('projects')}>
  <ul class="grid grid-cols-[repeat(auto-fit,minmax(200px,1fr))] gap-4 -mx-4 sm:mx-0">
    {
      projects.map(
        ({ url, description, highlights, name, isActive, github }) => {
          return (
            <li>
              <article class="rounded-lg border border-gray-200 dark:border-gray-700 gap-4 flex flex-col p-4 h-full">
                <header class="flex-1">
                  <h3 class="mb-1">
                    <a 
                      href={url} 
                      target="_blank" 
                      title={`Ver el proyecto ${name}`}
                      class="text-gray-900 dark:text-gray-100 hover:underline focus:underline hover:text-gray-700 dark:hover:text-gray-300"
                    >
                      {name}
                    </a>
                    {isActive && <span class="text-green-600 animate-flicker ml-1">•</span>}
                    {github && (
                      <a
                        class="ml-1.5 inline-block text-gray-600 dark:text-gray-400"
                        href={github}
                        target="_blank"
                        title={`Ver código fuente del proyecto ${name}`}
                        aria-label={`Ver código fuente del proyecto ${name} en GitHub`}
                      >
                        <Icon name="lucide:github" class="size-4" aria-hidden="true" />
                      </a>
                    )}
                  </h3>
                  <p class="text-xs leading-tight mb-1 text-gray-600 dark:text-gray-400">{description}</p>
                </header>
                <footer class="flex flex-wrap gap-1 text-[0.6rem]">
                  {highlights?.map((highlight) => {
                    return <span class="rounded-md bg-gray-50 dark:bg-gray-800 text-gray-700 dark:text-gray-300 text-[0.6rem] font-medium px-2.5 py-1 border border-gray-200 dark:border-gray-700">{highlight}</span>
                  })}
                </footer>
              </article>
            </li>
          )
        }
      )
    }
  </ul>
  </Section>
)}