---
import Section from "@atoms/Section.astro";
import { type Lang, useTranslations } from "@/i18n";
import { languageMapper } from "@/lib/language-mapper";
import type Language from "@/resume/language/language.model";

interface Props {
	languages?: Language[];
}

const { languages = [] } = Astro.props as Props;

const currentLocale = Astro.params.lang as Lang;
const t = useTranslations(currentLocale);

// Initialize the language mapper
await languageMapper.initialize();
---

{languages.length > 0 && (
  <Section title={t('languages')} class="mt-8">
    <ul class="grid grid-cols-[repeat(auto-fit,minmax(140px,1fr))] gap-2 m-0 p-0 list-none">
      {languages.map((l) => {
      const key = languageMapper.findLocaleCode(l.language);
      return (
        <li class="bg-gray-50 p-2 rounded-md text-sm">
          {key ? (
            <a href={`/${key}/`} onclick={`localStorage.selectedLang = "${key}"`}>
              <strong>{l.language}</strong>
              {l.fluency ? <span class="text-gray-600 font-normal text-sm"> — {l.fluency}</span> : null}
            </a>
          ) : (
            <>
              <strong>{l.language}</strong>
              {l.fluency ? <span class="text-gray-600 font-normal text-sm"> — {l.fluency}</span> : null}
            </>
          )}
        </li>
      );
    })}
  </ul>
  </Section>
)}


